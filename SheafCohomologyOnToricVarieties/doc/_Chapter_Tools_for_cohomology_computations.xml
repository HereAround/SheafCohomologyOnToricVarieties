<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Tools_for_cohomology_computations">
<Heading>Tools for cohomology computations</Heading>

<Section Label="Chapter_Tools_for_cohomology_computations_Section_Turn_CAP_Graded_Modules_into_old_graded_modules_and_vice_versa">
<Heading>Turn CAP Graded Modules into old graded modules and vice versa</Heading>

<ManSection>
  <Oper Arg="M" Name="TurnIntoOldGradedModule" Label="for IsFpGradedLeftOrRightModulesObject"/>
 <Returns>the corresponding graded modules in terms of the 'old' packages GradedModules
</Returns>
 <Description>
The argument is a graded left or right module presentation M for CAP
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Tools_for_cohomology_computations_Section_Save_CAP_fp_graded_module_to_file">
<Heading>Save CAP f.p. graded module to file</Heading>

<ManSection>
  <Oper Arg="M" Name="SaveToFileAsOldGradedModule" Label="for IsString, IsFpGradedLeftOrRightModulesObject"/>
 <Returns>true (in case of success) or raises error in case the file could not be written
</Returns>
 <Description>
The argument is a graded left or right module presentation M for CAP and saves this module
to file as 'old' graded module presentation. By default, the files are saved in the main
directory of the package 'SheafCohomologyOnToricVarieties'.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="M" Name="SaveToFileAsCAPGradedModule" Label="for IsString, IsFpGradedLeftOrRightModulesObject"/>
 <Returns>true (in case of success) or raises error in case the file could not be written
</Returns>
 <Description>
The argument is a graded left or right module presentation M for CAP and saves this module
to file as CAP graded module presentation. By default, the files are saved in the main
directory of the package 'SheafCohomologyOnToricVarieties'.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Tools_for_cohomology_computations_Section_Approximation_Of_Sheaf_Cohomologies">
<Heading>Approximation Of Sheaf Cohomologies</Heading>

<ManSection>
  <Oper Arg="V, e" Name="BPowerLeft" Label="for IsToricVariety, IsInt"/>
 <Returns>a CAP graded left module
</Returns>
 <Description>
The argument is a toric variety V and a non-negative integer e. The method computes the e-th
Frobenius power of the irrelevant left ideal of V.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="V, e" Name="BPowerRight" Label="for IsToricVariety, IsInt"/>
 <Returns>a CAP graded right module
</Returns>
 <Description>
The argument is a toric variety V and a non-negative integer e. The method computes the e-th
Frobenius power of the irrelevant right ideal of V.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="V, e, M" Name="ApproxH0" Label="for IsToricVariety, IsInt, IsFpGradedLeftOrRightModulesObject"/>
 <Returns>a non-negative integer
</Returns>
 <Description>
The argument is a toric variety V, a non-negative integer e and a graded CAP module M.
The method computes the degree zero layer of Hom( B(e), M ) and returns its vector
space dimension.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="V, e, M" Name="ApproxH0Parallel" Label="for IsToricVariety, IsInt, IsFpGradedLeftOrRightModulesObject"/>
 <Returns>a non-negative integer
</Returns>
 <Description>
The argument is a toric variety V, a non-negative integer e and a graded CAP module M.
The method computes the degree zero layer of Hom( B(e), M ) by use of parallelisation and
returns its vector space dimension.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="V, i, e, M" Name="ApproxHi" Label="for IsToricVariety, IsInt, IsInt, IsFpGradedLeftOrRightModulesObject"/>
 <Returns>a non-negative integer
</Returns>
 <Description>
The argument is a toric variety V, non-negative integers i, e and a graded CAP module M.
The method computes the degree zero layer of Ext^i( B(e), M ) and returns its vector
space dimension.
 </Description>
</ManSection>


<ManSection>
  <Oper Arg="V, i, e, M" Name="ApproxHiParallel" Label="for IsToricVariety, IsInt, IsInt, IsFpGradedLeftOrRightModulesObject"/>
 <Returns>a non-negative integer
</Returns>
 <Description>
The argument is a toric variety V, non-negative integer i, e and a graded CAP module M.
The method computes the degree zero layer of Ext^i( B(e), M ) by use of parallelisation and
returns its vector space dimension.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Tools_for_cohomology_computations_Section_Examples">
<Heading>Examples</Heading>

<Subsection Label="Chapter_Tools_for_cohomology_computations_Section_Examples_Subsection_Conversion_of_modules">
<Heading>Conversion of modules</Heading>

<Example><![CDATA[
gap> P1 := ProjectiveSpace( 1 );
<A projective toric variety of dimension 1>
gap> P1xP1 := P1 * P1;
<A projective toric variety of dimension 2
which is a product of 2 toric varieties>
gap> irP1xP1 := IrrelevantLeftIdealForCAP( P1xP1 );
<An object in Category of f.p. graded left
modules over Q[x_1,x_2,x_3,x_4] (with weights
[ [ 0, 1 ], [ 1, 0 ], [ 1, 0 ], [ 0, 1 ] ])>
gap> module2 := TurnIntoOldGradedModule( irP1xP1 );
<A graded left module presented by 4 relations for 4 generators>
gap> module3 := TurnIntoCAPGradedModule( module2 );
<An object in Category of f.p. graded left
modules over Q[x_1,x_2,x_3,x_4] (with weights
[ [ 0, 1 ], [ 1, 0 ], [ 1, 0 ], [ 0, 1 ] ])>
gap> module3 = irP1xP1;
true
]]></Example>


</Subsection>


<Subsection Label="Chapter_Tools_for_cohomology_computations_Section_Examples_Subsection_Approximation_of_0-th_sheaf_cohomology">
<Heading>Approximation of 0-th sheaf cohomology</Heading>

<Example><![CDATA[
gap> ApproxH0( P1xP1, 0, irP1xP1 );
<A vector space object over Q of dimension 0>
gap> ApproxH0( P1xP1, 1, irP1xP1 );
<A vector space object over Q of dimension 1>
gap> ApproxH0( P1xP1, 2, irP1xP1 );
<A vector space object over Q of dimension 1>
gap> ApproxH0Parallel( P1xP1, 0, irP1xP1 );
<A vector space object over Q of dimension 0>
gap> ApproxH0Parallel( P1xP1, 1, irP1xP1 );
<A vector space object over Q of dimension 1>
gap> ApproxH0Parallel( P1xP1, 2, irP1xP1 );
<A vector space object over Q of dimension 1>
]]></Example>


</Subsection>


<Subsection Label="Chapter_Tools_for_cohomology_computations_Section_Examples_Subsection_Approximation_of_1-st_sheaf_cohomology">
<Heading>Approximation of 1-st sheaf cohomology</Heading>

<Example><![CDATA[
gap> F1 := Fan( [[1],[-1]],[[1],[2]] );
<A fan in |R^1>
gap> P1 := ToricVariety( F1 );
<A toric variety of dimension 1>
gap> P1xP1 := P1 * P1;
<A toric variety of dimension 2 which is a product of 2 toric varieties>
gap> VForCAP := AsFreydCategoryObject( GradedRow( [[[1,1],1],[[-2,0],1]],
>                                                          CoxRing( P1xP1 ) ) );
<A projective object in Category of f.p. graded
left modules over Q[x_1,x_2,x_3,x_4] (with weights
[ [ 0, 1 ], [ 1, 0 ], [ 1, 0 ], [ 0, 1 ] ])>
gap> ApproxHi( P1xP1, 1, 0, VForCAP );
<A vector space object over Q of dimension 0>
gap> ApproxHi( P1xP1, 1, 1, VForCAP );
<A vector space object over Q of dimension 1>
gap> ApproxHi( P1xP1, 1, 2, VForCAP );
<A vector space object over Q of dimension 1>
gap> ApproxHiParallel( P1xP1, 1, 0, VForCAP );
<A vector space object over Q of dimension 0>
gap> ApproxHiParallel( P1xP1, 1, 1, VForCAP );
<A vector space object over Q of dimension 1>
gap> ApproxHiParallel( P1xP1, 1, 2, VForCAP );
<A vector space object over Q of dimension 1>
]]></Example>


</Subsection>


</Section>


</Chapter>

