<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Nef_and_Mori_Cone">
<Heading>Nef and Mori Cone</Heading>

<Section Label="Chapter_Nef_and_Mori_Cone_Section_New_Properties_For_Toric_Divisors">
<Heading>New Properties For Toric Divisors</Heading>

<ManSection>
  <Prop Arg="divi" Name="IsNef" Label="for IsToricDivisor"/>
 <Returns>true or false
</Returns>
 <Description>
Checks if the torus invariant Weil divisor <A>divi</A> is nef.
 </Description>
</ManSection>


<ManSection>
  <Prop Arg="divi" Name="IsAmpleViaNefCone" Label="for IsToricDivisor"/>
 <Returns>true or false
</Returns>
 <Description>
Checks if the class of the torus invariant Weil divisor <A>divi</A> lies in the interior of the nef cone.
Given that the ambient toric variety is projective this implies that <A>divi</A> is ample.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Nef_and_Mori_Cone_Section_Attributes">
<Heading>Attributes</Heading>

<ManSection>
  <Attr Arg="vari" Name="CartierDataGroup" Label="for IsToricVariety"/>
 <Returns>a list of lists
</Returns>
 <Description>
Given a toric variety <A>vari</A>, we compute the integral vectors in
<M>\mathbb{Z}^{n \left| \Sigma_{max} \right|}</M>, <M>n</M> is the rank of the character lattice
which encodes a toric Cartier divisor according to theorem 4.2.8. in Cox-Schenk-Little. We return a list of lists.
When interpreting this list of lists as a matrix, then the kernel of this matrix is the set of these vectors.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="NefConeInCartierDataGroup" Label="for IsToricVariety"/>
 <Returns>a list of lists
</Returns>
 <Description>
Given a smooth and complete toric variety <A>vari</A>, we compute the nef cone within the proper Cartier data in
<M>\mathbb{Z}^{n \left| \Sigma_{max} \right|}</M>, <M>n</M> is the rank of the character lattice.
We return a list of ray generators of this cone.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="NefConeInTorusInvariantWeilDivisorGroup" Label="for IsToricVariety"/>
 <Returns>a list of lists
</Returns>
 <Description>
Given a smooth and complete toric variety, we compute the nef cone within
<M> Div_T \left( X_\Sigma \right) </M>. We return a list of ray generators of this cone.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="NefConeInClassGroup" Label="for IsToricVariety"/>
 <Returns>a list of lists
</Returns>
 <Description>
Given a smooth and complete toric variety, we compute the nef cone within
<M> Cl \left( X_\Sigma \right) </M>. We return a list of ray generators of this cone.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="arg" Name="NefCone" Label="for IsToricVariety"/>
 <Description>
<P/>
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="ClassesOfSmallestAmpleDivisors" Label="for IsToricVariety"/>
 <Returns>a list of integers
</Returns>
 <Description>
Given a smooth and complete toric variety, we compute the smallest divisor class, such that the
associated divisor is ample. This is based on theorem 6.3.22 in Cox-Schenk-Little, which implies that this
task is equivalent to finding the smallest lattice point within the nef cone
(in <M>Cl \left( X_\Sigma \right)</M>). We return a list of integers encoding this lattice point.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="GroupOfProper1Cycles" Label="for IsToricVariety"/>
 <Returns>a kernel submodule
</Returns>
 <Description>
Given a simplicial and complete toric variety, we use proposition 6.4.1 of Cox-Schenk-Litte to compute
the group of proper 1-cycles. We return the corresponding kernel submodule.
 </Description>
</ManSection>


<ManSection>
  <Attr Arg="vari" Name="MoriCone" Label="for IsToricVariety"/>
 <Returns>an NmzCone6
</Returns>
 <Description>
Given a smooth and complete toric variety, we can compute both the intersection form and the Nef cone in
the class group. Then the Mori cone is the dual cone of the Nef cone with respect to the intersection product.
We compute an H-presentation of this dual cone and use those to produce a cone with the normaliz interface.
 </Description>
</ManSection>


</Section>


<Section Label="Chapter_Nef_and_Mori_Cone_Section_Nef_and_Mori_Cone_Examples">
<Heading>Nef and Mori Cone: Examples</Heading>

<Subsection Label="Chapter_Nef_and_Mori_Cone_Section_Nef_and_Mori_Cone_Examples_Subsection_Projective_Space">
<Heading>Projective Space</Heading>

<Example><![CDATA[
gap> P2 := ProjectiveSpace( 2 );
<A projective toric variety of dimension 2>
gap> P2xP2 := P2*P2;
<A projective toric variety of dimension 4
which is a product of 2 toric varieties>
gap> NefCone( P2 );
[ [ 1 ] ]
gap> NefCone( P2xP2 );
[ [ 0, 1 ], [ 1, 0 ] ]
gap> MoriCone( P2 );
[ [ 1 ] ]
gap> MoriCone( P2xP2 );
[ [ 0, 1 ], [ 1, 0 ] ]
gap> D1 := DivisorOfGivenClass( P2, [ -1 ] );
<A Cartier divisor of a toric variety with coordinates ( -1, 0, 0 )>
gap> IsAmpleViaNefCone( D1 );
false
gap> D2 := DivisorOfGivenClass( P2, [ 1 ] );
<A Cartier divisor of a toric variety with coordinates ( 1, 0, 0 )>
gap> IsAmpleViaNefCone( D2 );
true
gap> ClassesOfSmallestAmpleDivisors( P2 );
[ [ 1 ] ]
gap> ClassesOfSmallestAmpleDivisors( P2xP2 );
[ [ 1, 1 ] ]
]]></Example>


</Subsection>


</Section>


</Chapter>

